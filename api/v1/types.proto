/*
routerd
Copyright (C) 2020  The routerd Authors

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

syntax = "proto3";
package machinery.api.v1;
option go_package = "routerd.net/machinery/api/v1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

// Common Object Metadata.
// Every API Object SHOULD use this common metadata object,
// instead relying of custom definitions.
message ObjectMeta {
  // Unique ID, set server-side.
  // May be used to tell different revisions of objects with the same name apart.
  string uid = 1;
  // (Namespace) Unique name assigned to this object by the client.
  // Validated as RFC1035 DNS Label
  string name = 2;
  // Namespace this object belongs into.
  // Object names are unique to their namespace.
  // Objects MUST choose to be EITHER non-namespaced (making this field always empty) or
  // namespaced (requiring this field to be always supplied).
  // Validated as RFC1035 DNS Subdomain
  string namespace = 3;
  // Labels can be used to group objects for List calls, see LabelSelector in ListRequest.
  map<string, string> labels = 4;
  // Annotations can store arbitrary data to support custom API extensions or
  // information to be attached to an object, without requiring API alterations.
  map<string, string> annotations = 5;
  // ResourceVersion tracks the revision of the whole object and is updated on every change to the object.
  // On Update and UpdateStatus calls the supplied ResourceVersion MUST match with the ResourceVersion in the database or
  // a Conflict Error will be returned. Apply your changes to the latest object revision to resolve this error.
  string resourceVersion = 6;
  // Generation is incremented on changes to the Object Specification or Metadata (all fields except .status).
  // It is NOT updated on changes below the .status key.
  int64 generation = 7;
  // Finalizers delay cleanup of the object from storage and allow clients to implement custom cleanup logic.
  // When Finalizers are present on an object, the Delete operation will only mark the object as deleted,
  // by setting the DeletedTimestamp. After DeletedTimestamp is set are only allowed, when they remove one or more Finalizers.
  // When the last Finalizer is removed the object is deleted from storage.
  repeated string finalizers = 8;
  // Time this object was created.
  google.protobuf.Timestamp createdTimestamp = 9;
  // Time this object was deleted (see finalizers).
  google.protobuf.Timestamp deletedTimestamp = 10;
  // MAY be specified instead of the Name field to let the server generate a name for the object.
  // Given string is used as prefix. e.g. "test-obj-" -> "test-obj-xxx"
  string generateName = 11;
}

// ResourceEvent informs clients about changes to stored objects.
message ResourceEvent {
  // Type is one of "Added", "Modified", "Deleted", "Error"
  // Object is of type Status, when Type == "Error" and MAY contain additional Error information.
  string type = 1;
  // Affected object.
  // "Added": New Object as commited to storage.
  // "Modified": Modified objects as commited to storage.
  // "Deleted": Object state right before deletion.
  google.protobuf.Any object = 2;
}

// Status contains information about the call status.
// may be returned when an API call would be void or in case of an error.
message Status {
  // Code is the suggested HTTP Error code for this status.
  int32 code = 1;
  // Machine readable reason for this status.
  // Reason MUST be UpperCamelCased and MUST not contain spaces or special characters.
  // e.g. Success, ValidationError, RequestTimeout, ...
  string reason = 2;
  // Human readable reason for this status.
  string message = 3;
  // Additional error details
  // Types SHOULD stay consistent for the same Reason.
  repeated google.protobuf.Any details = 4;
}

message Namespace {
  ObjectMeta meta = 1;
}

message NamespaceList {
  // List meta = 1;
  repeated Namespace items = 2;
}

message GetRequest {
  string name = 1;
}

message ListRequest {
  string namespace = 1;
  string labelSelector = 2;
}

message WatchRequest {
  string namespace = 1;
  string labelSelector = 2;
}

message DeleteAllOfRequest {
  string namespace = 1;
  string labelSelector = 2;
}

service NamespaceService {
  rpc Get(GetRequest) returns (Namespace) {};
  rpc List(ListRequest) returns (NamespaceList) {};
  rpc Watch(WatchRequest) returns (stream ResourceEvent) {};
  rpc Create(Namespace) returns (Namespace) {};
  rpc Update(Namespace) returns (Namespace) {};
  rpc Delete(Namespace) returns (Namespace) {};
  rpc DeleteAllOf(DeleteAllOfRequest) returns (Status) {};
}
