/*
routerd
Copyright (C) 2020  The routerd Authors

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

syntax = "proto3";
package machinery.testdata.v1;
option go_package = "routerd.net/machinery/testdata/api/v1";

import "types.proto";

message TestObject {
  machinery.api.v1.ObjectMeta meta = 1;
  string field1 = 2;
  string field2 = 3;
  TestObjectStatus status = 4;
}

message TestObjectStatus {
  string status = 1;
}

message TestObjectList {
  machinery.api.v1.ListMeta meta = 1;
  repeated TestObject items = 2;
}

message TestObjectDeleteRequest {
  TestObject object = 1;
  machinery.api.v1.DeleteRequestOptions options = 2;
}

message TestObjectCreateRequest {
  TestObject object = 1;
  machinery.api.v1.CreateRequestOptions options = 2;
}

message TestObjectUpdateRequest {
  TestObject object = 1;
  machinery.api.v1.UpdateRequestOptions options = 2;
}

service TestObjectService {
  rpc Get(machinery.api.v1.GetRequest) returns (TestObject) {};
  rpc List(machinery.api.v1.ListRequest) returns (TestObjectList) {};
  rpc Watch(machinery.api.v1.WatchRequest) returns (stream machinery.api.v1.ResourceEvent) {};
  rpc Create(TestObjectCreateRequest) returns (TestObject) {};
  rpc Update(TestObjectUpdateRequest) returns (TestObject) {};
  rpc Delete(TestObjectDeleteRequest) returns (TestObject) {};
  rpc DeleteAllOf(machinery.api.v1.DeleteAllOfRequest) returns (machinery.api.v1.Status) {};
}

message Namespace {
  machinery.api.v1.ObjectMeta meta = 1;
}

message NamespaceList {
  machinery.api.v1.ListMeta meta = 1;
  repeated Namespace items = 2;
}
